(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{261:function(r,e,t){"use strict";t.r(e);var a=t(0),n=Object(a.a)({},function(){var r=this,e=r.$createElement,t=r._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[t("h1",{attrs:{id:"git分支管理实践"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git分支管理实践","aria-hidden":"true"}},[r._v("#")]),r._v(" git分支管理实践")]),r._v(" "),t("h2",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言","aria-hidden":"true"}},[r._v("#")]),r._v(" 前言")]),r._v(" "),t("p",[r._v("git的分支管理流程慢慢的变成一个团队的标配，在产品研发的各个变革版本中，项目的owner需要针对各个分支进行有效科学的管理，并保留下有历史意义的重要版本.同时针对团队各个成员设置好权限以及对应的代码操作培训也是必要的。")]),r._v(" "),t("h2",{attrs:{id:"常见分支分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常见分支分类","aria-hidden":"true"}},[r._v("#")]),r._v(" 常见分支分类")]),r._v(" "),t("h3",{attrs:{id:"master-主分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#master-主分支","aria-hidden":"true"}},[r._v("#")]),r._v(" master(主分支)")]),r._v(" "),t("p",[r._v("线上分支，所有分支的源分支，最后的归并分支（release分支完成测试后务必归并到master）")]),r._v(" "),t("h3",{attrs:{id:"dev（开发用，父级trunk）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dev（开发用，父级trunk）","aria-hidden":"true"}},[r._v("#")]),r._v(" dev（开发用，父级trunk）")]),r._v(" "),t("p",[r._v("功能开发分支，一般情况下特殊小功能的分支的源分支、归并的目标分支")]),r._v(" "),t("h3",{attrs:{id:"trunk（备份分支、所有代码集合在这）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#trunk（备份分支、所有代码集合在这）","aria-hidden":"true"}},[r._v("#")]),r._v(" trunk（备份分支、所有代码集合在这）")]),r._v(" "),t("p",[r._v("master的备份分支，dev完成归并测试之后的归并分支、dev的源分支")]),r._v(" "),t("h3",{attrs:{id:"feature（开发功能分支，父级dev，也叫做最小开发分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#feature（开发功能分支，父级dev，也叫做最小开发分支","aria-hidden":"true"}},[r._v("#")]),r._v(" feature（开发功能分支，父级dev，也叫做最小开发分支")]),r._v(" "),t("p",[r._v("细致的功能分支，从dev拉取，合并到dev，需要完成充分的自测")]),r._v(" "),t("h3",{attrs:{id:"release-次主分支，父级-master子级-trunk"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#release-次主分支，父级-master子级-trunk","aria-hidden":"true"}},[r._v("#")]),r._v(" release(次主分支，父级 master子级 trunk)")]),r._v(" "),t("p",[r._v("预发分支，完成trunk（sit环境）的测试之后，从trunk拉取，上传到预发环境")]),r._v(" "),t("h3",{attrs:{id:"bugfix（修复分支，父级master、修复完传trunk）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bugfix（修复分支，父级master、修复完传trunk）","aria-hidden":"true"}},[r._v("#")]),r._v(" bugfix（修复分支，父级master、修复完传trunk）")]),r._v(" "),t("p",[r._v("针对某些或者某个bug，从master拉取，修订后归并到trunk分支")]),r._v(" "),t("h3",{attrs:{id:"tag"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tag","aria-hidden":"true"}},[r._v("#")]),r._v(" tag")]),r._v(" "),t("p",[r._v("针对里程碑的master分支做的标志性版本，具有版本概念或者某些核心功能")]),r._v(" "),t("h2",{attrs:{id:""}},[t("a",{staticClass:"header-anchor",attrs:{href:"#","aria-hidden":"true"}},[r._v("#")])]),r._v(" "),t("h2",{attrs:{id:"分支命名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分支命名","aria-hidden":"true"}},[r._v("#")]),r._v(" 分支命名")]),r._v(" "),t("p",[r._v("master,trunk,不再额外命名，名称即为自己。\ndev命名,dev+拉取日期+代表性的功能（可选）:dev-20171024-user\nfeature命名，feature+拉取日期+功能名称，例如：feature-20171035-userlogin\nrelease命名，release+拉取/发布日期+功能名称，与dev功能名称对应，例如：release-20171201-user\nbugfix命名，bugfix+拉取日期+bug名字(issue id)，例如：bugfix-20171223-loginerror\ntag，里程碑性质，加版本号，例如：v1.0.0 ，在readme.md中写入版本声明，变动的内容")]),r._v(" "),t("h2",{attrs:{id:"-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#-2","aria-hidden":"true"}},[r._v("#")])]),r._v(" "),t("h2",{attrs:{id:"项目开发流程中的分支管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#项目开发流程中的分支管理","aria-hidden":"true"}},[r._v("#")]),r._v(" 项目开发流程中的分支管理")]),r._v(" "),t("h3",{attrs:{id:"正常开发流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#正常开发流程","aria-hidden":"true"}},[r._v("#")]),r._v(" 正常开发流程")]),r._v(" "),t("ol",[t("li",[r._v("trunk 拉取dev分支（把dev所有代码合并到trunk）")]),r._v(" "),t("li",[r._v("dev拉取feature分支（把feature的代码合并给dev")]),r._v(" "),t("li",[r._v("开发自测完成，feature merge 到dev分支（合并feature代码到dev")]),r._v(" "),t("li",[r._v("不同dev归并到trunk ，trunk在集成测试环境测试")]),r._v(" "),t("li",[r._v("集成测试通过，trunk拉取release分支，发布到预发环境")]),r._v(" "),t("li",[r._v("预发环境测试通过，预发分支归并到trunk和master\n备注：各个环境的分支有测试问题，直接在其分支上修正")])]),r._v(" "),t("h3",{attrs:{id:"-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#-3","aria-hidden":"true"}},[r._v("#")])]),r._v(" "),t("h3",{attrs:{id:"bug修改流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bug修改流程","aria-hidden":"true"}},[r._v("#")]),r._v(" bug修改流程")]),r._v(" "),t("p",[r._v("1 master拉取bugfix分支\n2 bugfix分支修改，分别自测，测试环境，预发环境\n3 测试通过后归并到master以及trunk")]),r._v(" "),t("h2",{attrs:{id:"-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#-4","aria-hidden":"true"}},[r._v("#")])]),r._v(" "),t("h2",{attrs:{id:"git冲突解决流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git冲突解决流程","aria-hidden":"true"}},[r._v("#")]),r._v(" git冲突解决流程")]),r._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2019/png/202135/1548309290983-77cf68fc-dbcb-4c57-853d-078ecc8c643e.png",alt:"img"}})]),r._v(" "),t("h2",{attrs:{id:"-5"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#-5","aria-hidden":"true"}},[r._v("#")])]),r._v(" "),t("h2",{attrs:{id:"注意事项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注意事项","aria-hidden":"true"}},[r._v("#")]),r._v(" 注意事项")]),r._v(" "),t("h3",{attrs:{id:"分支流向"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分支流向","aria-hidden":"true"}},[r._v("#")]),r._v(" 分支流向")]),r._v(" "),t("p",[r._v("我们认为分支流向分为两种，一种称为目标分支拉取，一种称为归并到目标分支。\n"),t("strong",[r._v("对于目标分支的拉取")]),r._v("，首先原则认为目标分支肯定是正确的，最新的代码，所以需要也必须无条件的拉取，来保证自己的分支代码不缺失 。\n"),t("strong",[r._v("而对于目标分支的归并")]),r._v("，因为我们是把自己的不稳定的、甚至bug版本的分支推送到正确的分支，多人共用甚至线上的分支，所以这个过程需要谨慎，谨慎的操作分为以下几个关键节点：")]),r._v(" "),t("ul",[t("li",[r._v("1 拉取目标的最新代码，也就是上面的第一种")]),r._v(" "),t("li",[r._v("2 拉取之后进行代码分析，项目运行，看整体项目以及自己的功能是否有问题，是否有代码冲突，如果有，解决掉")]),r._v(" "),t("li",[r._v("3 解决完拉取后的整合代码之后，进行归并merge request的请求，来让团队tl或者其他人cr你的提交部分，进行影响范围的确定，变动文件的确定，是否有风险点的确定，然后再同意或者拒绝你的分支是否可以归并到正确目标分支。")])]),r._v(" "),t("h3",{attrs:{id:"-6"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#-6","aria-hidden":"true"}},[r._v("#")])]),r._v(" "),t("h3",{attrs:{id:"功能分支细分的场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#功能分支细分的场景","aria-hidden":"true"}},[r._v("#")]),r._v(" 功能分支细分的场景")]),r._v(" "),t("p",[r._v("一般情况下，一个功能一个分支并无任何问题，不需要给每个人进行单独的feature分支。\n我们进行分支细分的场景如下，如果你不需要，那就不需要的。")]),r._v(" "),t("p",[t("strong",[r._v("场景")]),r._v("：在多人多功能并发的开发场景下，我们不可避免的会遇到多人开发一个分支，或者多人开发的功能分支存在依赖关系，也有一些时候，会遇到某人与其他人的代码存在影响关系，或者某人提交不规范，提交之后导致他人正常代码运行不起来。")]),r._v(" "),t("p",[t("strong",[r._v("综上")]),r._v("：解决方案，针对某功能开单独分支，某功能需要多人协作开发不同的功能细分的二级功能，在给每个人开feature细分功能分支。")]),r._v(" "),t("p",[t("strong",[r._v("可以解决的问题")]),r._v(" ：多功能分支明确，每人开发自己细分功能时互不影响，可以确定每个人的cleanCode，可以集中处理代码中可能存在的问题，可以在开始或者结束时集中解决分支代码的冲突问题。")]),r._v(" "),t("h3",{attrs:{id:"同一环境的分支是确定的还是不定的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#同一环境的分支是确定的还是不定的","aria-hidden":"true"}},[r._v("#")]),r._v(" 同一环境的分支是确定的还是不定的")]),r._v(" "),t("p",[r._v("我们分析好的几种环境，可以进行分支是确定还是不确定的优劣分析。")]),r._v(" "),t("p",[r._v("比如预发环境 ，如果是release确定的一个分支，那么只需要一台服务器，很多功能都推动到这个分支，那么这个分支的功能是杂乱的，在发布时是无法确定其全量代码是否是我需要发布的那部分，除非这个节点只有一个分支归并到这个分支，或者全量代码测试验收通过。")]),r._v(" "),t("p",[r._v("如果release是以release为标识的不同的功能分支，那么在部署到预发环境时，我们可以清楚的知道部署的这个预发分支全量代码就是我们需要部署到生产环境的。但这个也必然性的会需要多服务器，或者分阶段测试不同功能，验收后发布。")]),r._v(" "),t("p",[r._v("上面的分析看下来更像是集中测试服务器的特定分支，与个人电脑开发分支的处理策略。集中测试服务器肯定是特定的访问地址，总量的代码。而个人电脑只是个人开发负责的某个功能的研发测试体现。")]),r._v(" "),t("p",[r._v("无论是哪种策略，需要把握好其代码的干净性，发布的准确性。")]),r._v(" "),t("h2",{attrs:{id:"其他"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其他","aria-hidden":"true"}},[r._v("#")]),r._v(" 其他")]),r._v(" "),t("p",[r._v("个人建议，如果针对各个功能是持续的，渐进的，渐进针对各个功能的部分进行功能编号，便于以后查询以及定位。")]),r._v(" "),t("p",[r._v("若有收获，就赏束稻谷吧")]),r._v(" "),t("p",[r._v("7 颗稻谷")]),r._v(" "),t("p",[t("a",{attrs:{href:"https://www.yuque.com/robinson",target:"_blank",rel:"noopener noreferrer"}},[r._v("Robinson"),t("OutboundLink")],1)]),r._v(" "),t("p",[r._v("01-24 23:34")]),r._v(" "),t("p",[r._v("127")]),r._v(" "),t("p",[r._v("0")]),r._v(" "),t("p",[r._v("投诉")]),r._v(" "),t("p",[r._v("分享到：")]),r._v(" "),t("p",[r._v("上一篇")]),r._v(" "),t("h6",{attrs:{id:"git分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git分支","aria-hidden":"true"}},[r._v("#")]),r._v(" git分支")]),r._v(" "),t("p",[r._v("下一篇")]),r._v(" "),t("h6",{attrs:{id:"git-tag使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-tag使用","aria-hidden":"true"}},[r._v("#")]),r._v(" git-tag使用")]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://www.yuque.com/robinson/git/akknw0#df368884",target:"_blank",rel:"noopener noreferrer"}},[r._v("前言"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://www.yuque.com/robinson/git/akknw0#c01cfe91",target:"_blank",rel:"noopener noreferrer"}},[r._v("常见分支分类"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://www.yuque.com/robinson/git/akknw0#mater",target:"_blank",rel:"noopener noreferrer"}},[r._v("mater"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://www.yuque.com/robinson/git/akknw0#dev",target:"_blank",rel:"noopener noreferrer"}},[r._v("dev"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://www.yuque.com/robinson/git/akknw0#trunk",target:"_blank",rel:"noopener noreferrer"}},[r._v("trunk"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://www.yuque.com/robinson/git/akknw0#feature",target:"_blank",rel:"noopener noreferrer"}},[r._v("feature"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://www.yuque.com/robinson/git/akknw0#release",target:"_blank",rel:"noopener noreferrer"}},[r._v("release"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://www.yuque.com/robinson/git/akknw0#bugfix",target:"_blank",rel:"noopener noreferrer"}},[r._v("bugfix"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://www.yuque.com/robinson/git/akknw0#tag",target:"_blank",rel:"noopener noreferrer"}},[r._v("tag"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://www.yuque.com/robinson/git/akknw0#cdd1d466",target:"_blank",rel:"noopener noreferrer"}},[r._v("分支命名"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://www.yuque.com/robinson/git/akknw0#897ddc42",target:"_blank",rel:"noopener noreferrer"}},[r._v("项目开发流程中的分支管理"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://www.yuque.com/robinson/git/akknw0#e07860de",target:"_blank",rel:"noopener noreferrer"}},[r._v("正常开发流程"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://www.yuque.com/robinson/git/akknw0#bb062b8c",target:"_blank",rel:"noopener noreferrer"}},[r._v("bug修改流程"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://www.yuque.com/robinson/git/akknw0#eefff88c",target:"_blank",rel:"noopener noreferrer"}},[r._v("git冲突解决流程"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://www.yuque.com/robinson/git/akknw0#1bbbb204",target:"_blank",rel:"noopener noreferrer"}},[r._v("注意事项"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://www.yuque.com/robinson/git/akknw0#95e5de2b",target:"_blank",rel:"noopener noreferrer"}},[r._v("分支流向"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://www.yuque.com/robinson/git/akknw0#7d9847db",target:"_blank",rel:"noopener noreferrer"}},[r._v("功能分支细分的场景"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://www.yuque.com/robinson/git/akknw0#08f01ab6",target:"_blank",rel:"noopener noreferrer"}},[r._v("同一环境的分支是确定的还是不定的"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://www.yuque.com/robinson/git/akknw0#0d98c747",target:"_blank",rel:"noopener noreferrer"}},[r._v("其他"),t("OutboundLink")],1)])])])},[],!1,null,null,null);e.default=n.exports}}]);